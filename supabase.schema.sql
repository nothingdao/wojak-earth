-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.
-- This schema is auto-generated by Supabase.

CREATE TABLE public.character_images (
  id text NOT NULL,
  characterId text NOT NULL,
  version integer NOT NULL,
  imageUrl text NOT NULL,
  description text,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT character_images_pkey PRIMARY KEY (id),
  CONSTRAINT character_images_characterId_fkey FOREIGN KEY (characterId) REFERENCES public.characters(id)
);
CREATE TABLE public.character_inventory (
  id text NOT NULL,
  characterId text NOT NULL,
  itemId text NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  isEquipped boolean NOT NULL DEFAULT false,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt timestamp without time zone NOT NULL,
  equippedslot text,
  slot_index integer DEFAULT 1,
  is_primary boolean DEFAULT false,
  CONSTRAINT character_inventory_pkey PRIMARY KEY (id),
  CONSTRAINT character_inventory_itemId_fkey FOREIGN KEY (itemId) REFERENCES public.items(id),
  CONSTRAINT character_inventory_characterId_fkey FOREIGN KEY (characterId) REFERENCES public.characters(id)
);
CREATE TABLE public.characters (
  id text NOT NULL,
  nftAddress text,
  tokenId text,
  walletAddress text NOT NULL,
  name text NOT NULL,
  gender USER-DEFINED NOT NULL,
  characterType USER-DEFINED NOT NULL DEFAULT 'HUMAN'::"CharacterType",
  currentLocationId text NOT NULL,
  currentVersion integer NOT NULL DEFAULT 1,
  currentImageUrl text,
  energy integer NOT NULL DEFAULT 100,
  health integer NOT NULL DEFAULT 100,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt timestamp without time zone NOT NULL,
  coins integer NOT NULL DEFAULT 0,
  level integer NOT NULL DEFAULT 1,
  status text DEFAULT 'PENDING_MINT'::text,
  payment_signature text UNIQUE,
  experience integer DEFAULT 0,
  CONSTRAINT characters_pkey PRIMARY KEY (id),
  CONSTRAINT characters_currentLocationId_fkey FOREIGN KEY (currentLocationId) REFERENCES public.locations(id)
);
CREATE TABLE public.chat_messages (
  id text NOT NULL,
  locationId text NOT NULL,
  characterId text NOT NULL,
  message text NOT NULL,
  messageType USER-DEFINED NOT NULL DEFAULT 'CHAT'::"ChatMessageType",
  isSystem boolean NOT NULL DEFAULT false,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT chat_messages_pkey PRIMARY KEY (id),
  CONSTRAINT chat_messages_characterId_fkey FOREIGN KEY (characterId) REFERENCES public.characters(id),
  CONSTRAINT chat_messages_locationId_fkey FOREIGN KEY (locationId) REFERENCES public.locations(id)
);
CREATE TABLE public.items (
  id text NOT NULL,
  name text NOT NULL,
  description text NOT NULL,
  category USER-DEFINED NOT NULL,
  layerType USER-DEFINED,
  imageUrl text,
  rarity USER-DEFINED NOT NULL DEFAULT 'COMMON'::"Rarity",
  durability integer,
  energyEffect integer,
  healthEffect integer,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt timestamp without time zone NOT NULL,
  layerfile text,
  layergender text CHECK (layergender = ANY (ARRAY['MALE'::text, 'FEMALE'::text])),
  baselayerfile text,
  hasgendervariants boolean DEFAULT false,
  CONSTRAINT items_pkey PRIMARY KEY (id)
);
CREATE TABLE public.location_resources (
  id text NOT NULL,
  locationId text NOT NULL,
  itemId text NOT NULL,
  spawnRate double precision NOT NULL DEFAULT 0.1,
  maxPerDay integer,
  difficulty integer NOT NULL DEFAULT 1,
  CONSTRAINT location_resources_pkey PRIMARY KEY (id),
  CONSTRAINT location_resources_itemId_fkey FOREIGN KEY (itemId) REFERENCES public.items(id),
  CONSTRAINT location_resources_locationId_fkey FOREIGN KEY (locationId) REFERENCES public.locations(id)
);
CREATE TABLE public.locations (
  id text NOT NULL,
  name text NOT NULL,
  description text NOT NULL,
  imageUrl text,
  parentLocationId text,
  locationType USER-DEFINED NOT NULL DEFAULT 'REGION'::"LocationType",
  biome text,
  difficulty integer NOT NULL DEFAULT 1,
  mapX integer,
  mapY integer,
  playerCount integer NOT NULL DEFAULT 0,
  lastActive timestamp without time zone,
  hasMarket boolean NOT NULL DEFAULT true,
  hasMining boolean NOT NULL DEFAULT true,
  hasTravel boolean NOT NULL DEFAULT true,
  hasChat boolean NOT NULL DEFAULT true,
  chatScope USER-DEFINED NOT NULL DEFAULT 'LOCAL'::"ChatScope",
  welcomeMessage text,
  lore text,
  minLevel integer,
  entryCost integer,
  isPrivate boolean NOT NULL DEFAULT false,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt timestamp without time zone NOT NULL,
  svgpathid text,
  theme text,
  isExplored boolean DEFAULT true,
  status text DEFAULT 'explored'::text,
  CONSTRAINT locations_pkey PRIMARY KEY (id),
  CONSTRAINT locations_parentLocationId_fkey FOREIGN KEY (parentLocationId) REFERENCES public.locations(id)
);
CREATE TABLE public.market_listings (
  id text NOT NULL,
  sellerId text,
  locationId text NOT NULL,
  itemId text NOT NULL,
  price integer NOT NULL,
  quantity integer NOT NULL DEFAULT 1,
  isSystemItem boolean NOT NULL DEFAULT false,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updatedAt timestamp without time zone NOT NULL,
  CONSTRAINT market_listings_pkey PRIMARY KEY (id),
  CONSTRAINT market_listings_itemId_fkey FOREIGN KEY (itemId) REFERENCES public.items(id),
  CONSTRAINT market_listings_sellerId_fkey FOREIGN KEY (sellerId) REFERENCES public.characters(id),
  CONSTRAINT market_listings_locationId_fkey FOREIGN KEY (locationId) REFERENCES public.locations(id)
);
CREATE TABLE public.npc_wallets (
  character_id text NOT NULL,
  encrypted_private_key text NOT NULL,
  public_key text NOT NULL,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT npc_wallets_pkey PRIMARY KEY (character_id),
  CONSTRAINT npc_wallets_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.pending_payments (
  id text NOT NULL,
  wallet_address text NOT NULL,
  amount numeric NOT NULL,
  status text NOT NULL DEFAULT 'PENDING'::text CHECK (status = ANY (ARRAY['PENDING'::text, 'VERIFIED'::text, 'EXPIRED'::text, 'FAILED'::text])),
  character_data jsonb,
  memo text,
  treasury_wallet text NOT NULL,
  transaction_signature text,
  amount_received numeric,
  nft_minted boolean DEFAULT false,
  character_id text,
  nft_address text,
  created_at timestamp with time zone DEFAULT now(),
  expires_at timestamp with time zone NOT NULL,
  verified_at timestamp with time zone,
  minted_at timestamp with time zone,
  CONSTRAINT pending_payments_pkey PRIMARY KEY (id),
  CONSTRAINT pending_payments_character_id_fkey FOREIGN KEY (character_id) REFERENCES public.characters(id)
);
CREATE TABLE public.transactions (
  id text NOT NULL,
  characterId text NOT NULL,
  type USER-DEFINED NOT NULL,
  itemId text,
  quantity integer,
  description text NOT NULL,
  createdAt timestamp without time zone NOT NULL DEFAULT CURRENT_TIMESTAMP,
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_characterId_fkey FOREIGN KEY (characterId) REFERENCES public.characters(id)
);
